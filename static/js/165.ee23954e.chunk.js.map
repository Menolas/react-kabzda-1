{"version":3,"file":"static/js/165.ee23954e.chunk.js","mappings":"gLACA,G,QAAA,CAAgB,QAAU,2B,UCA1B,EAAyB,2B,SCczB,EAXmB,SAACA,GAElB,IAAIC,EAAO,aAAeD,EAAME,GAEhC,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAG/B,ECZD,EAA0B,yBCQ1B,EANgB,SAACN,GACf,OACE,gBAAKG,UAAWC,EAAhB,SAAkCJ,EAAMO,SAE3C,E,uCCCKC,GAAcC,EAAAA,EAAAA,GAAiB,IA8C/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,qBAAlBD,EAbL,SAACX,GACtB,OACE,kBAAMa,SAAUb,EAAMc,aAAtB,WACE,SAACC,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXX,KAAK,iBACLY,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUZ,MACvB,uCAGL,IAID,EA9CgB,SAACR,GAEf,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QACzBC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAA4BpB,KAAMoB,EAAOpB,KAAMJ,GAAIwB,EAAOxB,IAAzCwB,EAAOxB,GAA5B,IAETyB,EAAmBN,EAAMO,SAC1BH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE3B,GAAxC,IAMR,OACE,iBAAKC,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SACGmB,KAEH,iBAAKpB,UAAWC,EAAAA,SAAhB,WACE,yBAAMuB,KACN,0BACE,0BACE,SAACjB,EAAD,CAAqBG,SAbT,SAACiB,GACrB9B,EAAM+B,YAAYD,EAAOE,eAC1B,aAiBF,E,oBCnBD,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACb,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEtB,IAEwB,SAACa,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,GAASC,EAAAA,EAAAA,GAAmBJ,GAC7B,EAEJ,IAICK,EAAAA,EAFF,CAGEC,E,mJCnBEC,EAA6B,SAAClB,GAAD,MAC/B,CAAEmB,OAAQnB,EAAMoB,KAAKD,OADU,EAIpBH,EAAmB,SAACK,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAK5C,MAAMwC,QACT,SAACE,GAAD,UAAeE,KAAK5C,SADI,SAAC,KAAD,CAAUK,GAAG,UAE7C,KAL0C,GACbwC,EAAAA,WAShC,OAFiCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS,EAGtE,C","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-kabzda-1/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://react-kabzda-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__hiCOy\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__hFgsl\",\"active\":\"DialogItem_active__NrHv6\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './DialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = \"/dialogs/1\" + props.id;\r\n  \r\n  return (\r\n    <div className={classes.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__nDflS\"};","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.message}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs\r\n    .map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />);\r\n\r\n  let messagesElements = state.messages\r\n    .map(m => <Message message={m.message} key={m.id} />);\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newMessageBody\"\r\n        placeholder=\"Enter your message\"\r\n        validate={[required, maxLength50]} />\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogMessageForm\" })(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => (\r\n  { isAuth: state.auth.isAuth }\r\n);\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedRedirectComponent;\r\n}\r\n"],"names":["props","path","id","className","classes","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}