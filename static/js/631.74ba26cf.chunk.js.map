{"version":3,"file":"static/js/631.74ba26cf.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__Jr4rJ\",\"background\":\"Profile_background__QUfAd\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__bMHEa\",\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__89iqc\",\"avatar\":\"ProfileInfo_avatar__d7FlB\",\"name\":\"ProfileInfo_name__-nzbT\",\"lookingForJob\":\"ProfileInfo_lookingForJob__UHUZD\",\"socialContactsList\":\"ProfileInfo_socialContactsList__RZWTx\",\"socialContactsItem\":\"ProfileInfo_socialContactsItem__lQVap\",\"profileStatus\":\"ProfileInfo_profileStatus__hH4m5\"};","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.profileStatus}>\r\n      { !editMode &&\r\n        <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n      }\r\n\r\n      { editMode &&\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            value={status}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode} />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from \"../../../common/FormsControl/FormsControl\";\r\nimport classes from '../../../common/FormsControl/FormsControl.module.css';\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return (\r\n    <form className=\"profileForm\" onSubmit={handleSubmit}>\r\n      <h2>Updating profile</h2>\r\n      <div className={classes.profileFormInputWrap}>\r\n        <label>Full Name:</label>\r\n        <Field\r\n          component={Input}\r\n          name=\"fullName\"\r\n          placeholder=\"Full Name\"/>\r\n      </div>\r\n      <div className={classes.profileFormInputWrap}>\r\n        <label>Looking for a job:</label>\r\n        <Field\r\n          component={Input}\r\n          name=\"lookingForAJob\"\r\n          type=\"checkbox\" />\r\n      </div>\r\n      <div className={classes.profileFormInputWrap}>\r\n        <label>My professional skills:</label>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"lookingForAJobDescription\"\r\n          placeholder=\"My professional skills\" />\r\n      </div>\r\n      <div className={classes.profileFormInputWrap}>\r\n        <label>About me:</label>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"aboutMe\"\r\n          placeholder=\"About me\" />\r\n      </div>\r\n      <div className=\"\">\r\n        <h3>Contacts</h3>\r\n        <div className=\"\">\r\n          { Object.keys(profile.contacts)\r\n              .map(key => {\r\n                return (\r\n                  <div\r\n                    key={key}\r\n                    className={classes.profileFormInputWrap}>\r\n                    <label>{key}</label>\r\n                    <Field\r\n                      component={Input}\r\n                      name={\"contacts.\" + key}\r\n                      placeholder=\"\" />\r\n                  </div>\r\n                )\r\n              })\r\n          }\r\n        </div>\r\n      </div>\r\n      { error &&\r\n        <div className={classes.inputWrap + \" \" + classes.formSummaryError}>\r\n          {error}\r\n        </div>\r\n      }\r\n      <div><button>save</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/dragon-head.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  console.log(contactValue);\r\n  return (\r\n    <li className={classes.socialContactsItem}>\r\n      <span>{contactTitle}:</span>\r\n      <span>{contactValue}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n      <div className={classes.lookingForJob + \" \" + classes.profileInfoBlock}>\r\n        <span>{profile.lookingForAJob ? \"Searching for Job\" : \"Not Searching for Job\"}</span>\r\n        <div>\r\n          <span>Description:</span>\r\n          <span>\r\n            {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : ' ---'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.aboutMe + \" \" + classes.profileInfoBlock}>\r\n        <span>About me:</span>\r\n        <span>{profile.aboutMe ? profile.aboutMe : ' ---'}</span>\r\n      </div>\r\n      <div className={classes.socialContacts  + \" \" + classes.profileInfoBlock}>\r\n        <ul className={classes.socialContactsList}>\r\n          {\r\n            Object.keys(profile.contacts)\r\n              .map(key => {\r\n                return <Contact\r\n                  key={key}\r\n                  contactTitle={key}\r\n                  contactValue={profile.contacts[key]} />\r\n              })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n  \r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    console.log(formData);\r\n    saveProfile(formData).then(\r\n        () => {\r\n          setEditMode(false);\r\n        }\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.profileInfo}>\r\n      <div className={classes.avatar}>\r\n        <img src={profile.photos && profile.photos.small && profile.photos.small !== null ? profile.photos.small : userPhoto} alt=\"\" />\r\n      </div>\r\n      {isOwner && <input type={\"file\"} onChange={ onMainPhotoSelected } /> }\r\n      <div className={classes.name + \" \" + classes.profileInfoBlock}>{profile.fullName}</div>\r\n      <ProfileStatusWithHooks\r\n        status={status}\r\n        updateStatus={updateStatus} />\r\n      {\r\n        editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n          : \r\n          <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newPost\":\"MyPosts_newPost__3PhR6\",\"postsList\":\"MyPosts_postsList__vgLuA\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__xlp0p\",\"itemContent\":\"Post_itemContent__iW0E1\",\"itemLike\":\"Post_itemLike__0otOk\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport ava from './ichigo.jpg';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <img src={ava} alt=\"\" />\r\n      <div className={classes.itemContent}>\r\n        {props.message}\r\n        <span className={classes.itemLike}>{props.likesCount}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from './../../common/FormsControl/FormsControl';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        rows=\"10\"\r\n        component={Textarea}\r\n        name=\"newPostText\"\r\n        validate={[required, maxLength50]}\r\n        placeholder={\"Write your next post here\"} />\r\n      <button >Add post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElements = props.profilePage.posts\r\n    .map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n  \r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.myPosts}>\r\n      <h3>My posts</h3>\r\n      <div className={classes.newPost}>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      </div>\r\n      <ul className={classes.postsList}>\r\n        {postsElements}\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostAC } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostAC(newPostText));\r\n    },\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport background from '../../assets/images/portfolio-background.jpg';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <div className={classes.background}>\r\n        <img src={background} alt=\"\" />\r\n      </div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        isOwner={props.isOwner} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n//import { useParams, withRouter } from 'react-router-dom'; \r\nimport { connect } from \"react-redux\";\r\nimport Profile from './Profile';\r\nimport { getStatus, getUserProfile, updateStatus, savePhoto, saveProfile, } from '../../redux/profile-reducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from \"redux\";\r\nimport { withRouter } from '../../utils/withRouter';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, PrevState, snapshot) {\r\n    \r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto} />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n  {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => (\r\n  { isAuth: state.auth.isAuth }\r\n);\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedRedirectComponent;\r\n}\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","Field","component","Input","name","placeholder","type","Textarea","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","console","log","ProfileData","isOwner","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","savePhoto","saveProfile","Preloader","src","photos","small","userPhoto","alt","target","files","length","fullName","initialValues","formData","then","ava","message","likesCount","maxLength50","maxLengthCreator","AddNewPostFormRedux","rows","validate","required","React","postsElements","profilePage","posts","p","id","values","addPost","newPostText","connect","state","dispatch","addPostAC","MyPosts","background","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","PrevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}